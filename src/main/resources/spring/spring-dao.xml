<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 配置整合Mybatis的过程 -->

	<!-- 1和2是通用的数据库配置 -->
	<!-- 1.配置数据库相关参数 -->
	<!-- 在spring配置文件中通过$获取properties中配置的属性值 如：${url} -->
	<context:property-placeholder location="classpath:jdbc.properties"/>

	<!-- 2：配置数据库连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池的属性 -->
		<property name="driverClass" value="com.mysql.jdbc.Driver"/>
		<property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/seckill?characterEncoding=utf8&amp;useSSL=false"/>
		<property name="user" value="root"/>
		<property name="password" value="cqb9311"/>

		<!-- 配置c3p0连接池的私有属性 -->
		<property name="maxPoolSize" value="30"/>
		<property name="minPoolSize" value="10"/>
		<!-- 关闭连接后不自动commit -->
		<property name="autoCommitOnClose" value="false"/>
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="1000"/>
		<!-- 获取连接失败的重试次数 -->
		<property name="acquireRetryAttempts" value="2"/>
	</bean>

	<!-- 下面3和4是Mybatis与Spring整合的方法 -->
	<!-- 约定大于配置 -->
	<!-- 3:配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 配置Mybatis全局配置文件：mybatis-conifg.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 扫描entity包 使用别名 -->
		<property name="typeAliasesPackage" value="org.seckill.entity"/>
		<!-- 扫描sql配置文件：mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>

	<!-- 4：配置扫描Dao接口包，动态实现Dao接口，注入到Spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<!-- 给出需要扫描的Dao接口包 -->
		<property name="basePackage" value="org.seckill.dao"/>
	</bean>

	<!-- 5: 手动注入RedisDao bean实例 -->
	<bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
		<!-- 采用构造器注入-->
		<!-- 参数应放在properties文件中-->
		<constructor-arg index="0" value="localhost"/>
		<constructor-arg index="1" value="6379"/>
	</bean>
</beans>